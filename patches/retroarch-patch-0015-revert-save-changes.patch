diff --git a/runloop.c b/runloop.c
index 80c8891cce..ce4c786da3 100644
--- a/runloop.c
+++ b/runloop.c
@@ -7880,16 +7880,16 @@ void runloop_path_set_redirect(settings_t *settings,
    char content_dir_name[DIR_MAX_LENGTH];
    char new_savefile_dir[DIR_MAX_LENGTH];
    char new_savestate_dir[DIR_MAX_LENGTH];
-   char intermediate_savefile_dir[DIR_MAX_LENGTH];
-   char intermediate_savestate_dir[DIR_MAX_LENGTH];
-   runloop_state_t *runloop_st            = &runloop_state;
-   struct retro_system_info *sysinfo      = &runloop_st->system.info;
-   bool sort_savefiles_enable             = settings->bools.sort_savefiles_enable;
-   bool sort_savefiles_by_content_enable  = settings->bools.sort_savefiles_by_content_enable;
-   bool sort_savestates_enable            = settings->bools.sort_savestates_enable;
-   bool sort_savestates_by_content_enable = settings->bools.sort_savestates_by_content_enable;
-   bool savefiles_in_content_dir          = settings->bools.savefiles_in_content_dir;
-   bool savestates_in_content_dir         = settings->bools.savestates_in_content_dir;
+   char intermediate_savefile_dir[PATH_MAX_LENGTH];
+   char intermediate_savestate_dir[PATH_MAX_LENGTH];
+   runloop_state_t *runloop_st                 = &runloop_state;
+   struct retro_system_info *sysinfo           = &runloop_st->system.info;
+   bool sort_savefiles_enable                  = settings->bools.sort_savefiles_enable;
+   bool sort_savefiles_by_content_enable       = settings->bools.sort_savefiles_by_content_enable;
+   bool sort_savestates_enable                 = settings->bools.sort_savestates_enable;
+   bool sort_savestates_by_content_enable      = settings->bools.sort_savestates_by_content_enable;
+   bool savefiles_in_content_dir               = settings->bools.savefiles_in_content_dir;
+   bool savestates_in_content_dir              = settings->bools.savestates_in_content_dir;
 
    content_dir_name[0] = '\0';
 
@@ -7904,37 +7904,8 @@ void runloop_path_set_redirect(settings_t *settings,
         || sort_savestates_by_content_enable)
        && !string_is_empty(runloop_st->runtime_content_path_basename))
       fill_pathname_parent_dir_name(content_dir_name,
-                                    runloop_st->runtime_content_path_basename,
-                                    sizeof(content_dir_name));
-
-   /* Set savefile directory if empty to content directory */
-   if (     string_is_empty(intermediate_savefile_dir)
-         || savefiles_in_content_dir)
-   {
-      strlcpy(intermediate_savefile_dir,
-              runloop_st->runtime_content_path_basename,
-              sizeof(intermediate_savefile_dir));
-      path_basedir(intermediate_savefile_dir);
-
-      if (string_is_empty(intermediate_savefile_dir))
-         RARCH_LOG("Cannot resolve save file path.\n");
-   }
-
-   /* Set savestate directory if empty based on content directory */
-   if (   string_is_empty(intermediate_savestate_dir)
-       || savestates_in_content_dir)
-   {
-      strlcpy(intermediate_savestate_dir,
-              runloop_st->runtime_content_path_basename,
-              sizeof(intermediate_savestate_dir));
-      path_basedir(intermediate_savestate_dir);
-
-      if (string_is_empty(intermediate_savestate_dir))
-         RARCH_LOG("Cannot resolve save state file path.\n");
-   }
-
-   strlcpy(new_savefile_dir, intermediate_savefile_dir, sizeof(new_savefile_dir));
-   strlcpy(new_savestate_dir, intermediate_savestate_dir, sizeof(new_savestate_dir));
+            runloop_st->runtime_content_path_basename,
+            sizeof(content_dir_name));
 
    if (sysinfo && !string_is_empty(sysinfo->library_name))
    {
@@ -7946,13 +7917,13 @@ void runloop_path_set_redirect(settings_t *settings,
          /* Per-core and/or per-content-directory saves */
          if ((sort_savefiles_enable
               || sort_savefiles_by_content_enable)
-             && !string_is_empty(new_savefile_dir))
+             && !string_is_empty(old_savefile_dir))
          {
             /* Append content directory name to save location */
             if (sort_savefiles_by_content_enable)
                fill_pathname_join_special(
                   new_savefile_dir,
-                  intermediate_savefile_dir,
+                  old_savefile_dir,
                   content_dir_name,
                   sizeof(new_savefile_dir));
 
@@ -7971,22 +7942,22 @@ void runloop_path_set_redirect(settings_t *settings,
                {
                   RARCH_LOG("%s %s\n",
                             msg_hash_to_str(MSG_REVERTING_SAVEFILE_DIRECTORY_TO),
-                            intermediate_savefile_dir);
+                            old_savefile_dir);
                   strlcpy(new_savefile_dir,
-                        intermediate_savefile_dir,
+                        old_savefile_dir,
                         sizeof(new_savefile_dir));
                }
          }
 
          /* Per-core and/or per-content-directory savestates */
          if ((sort_savestates_enable || sort_savestates_by_content_enable)
-             && !string_is_empty(new_savestate_dir))
+             && !string_is_empty(old_savefile_dir))
          {
             /* Append content directory name to savestate location */
             if (sort_savestates_by_content_enable)
                fill_pathname_join_special(
                   new_savestate_dir,
-                  intermediate_savestate_dir,
+                  old_savefile_dir,
                   content_dir_name,
                   sizeof(new_savestate_dir));
 
@@ -8005,15 +7976,45 @@ void runloop_path_set_redirect(settings_t *settings,
                {
                   RARCH_LOG("%s %s\n",
                             msg_hash_to_str(MSG_REVERTING_SAVESTATE_DIRECTORY_TO),
-                            intermediate_savestate_dir);
+                            old_savestate_dir);
                   strlcpy(new_savestate_dir,
-                          intermediate_savestate_dir,
+                          old_savestate_dir,
                           sizeof(new_savestate_dir));
                }
          }
       }
    }
 
+   /* Set savefile directory if empty to content directory */
+   if (string_is_empty(new_savefile_dir) || savefiles_in_content_dir)
+   {
+      strlcpy(new_savefile_dir,
+            runloop_st->runtime_content_path_basename,
+            sizeof(new_savefile_dir));
+      path_basedir(new_savefile_dir);
+
+      if (string_is_empty(new_savefile_dir))
+         RARCH_LOG("Cannot resolve save file path.\n");
+      else if (sort_savefiles_enable
+            || sort_savefiles_by_content_enable)
+         RARCH_LOG("Saving files in content directory is set. This overrides other save file directory settings.\n");
+   }
+
+   /* Set savestate directory if empty based on content directory */
+   if (     string_is_empty(new_savestate_dir)
+         || savestates_in_content_dir)
+   {
+      strlcpy(new_savestate_dir,
+            runloop_st->runtime_content_path_basename,
+            sizeof(new_savestate_dir));
+      path_basedir(new_savestate_dir);
+
+      if (string_is_empty(new_savestate_dir))
+         RARCH_LOG("Cannot resolve save state file path.\n");
+      else if (sort_savestates_enable
+            || sort_savestates_by_content_enable)
+         RARCH_LOG("Saving save states in content directory is set. This overrides other save state file directory settings.\n");
+   }
 
 #ifdef HAVE_NETWORKING
    /* Special save directory for netplay clients. */
